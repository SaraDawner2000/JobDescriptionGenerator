@using Microsoft.AspNetCore.Components.Forms
@using System.Linq.Expressions

<div class="mt-3">
    <label><strong>@Label</strong></label>
    <ul class="mt-2">
        @for (int i = 0; i < Items.Count; i++)
        {
            var index = i;
            <li class="mb-2">
                <InputTextArea @bind-Value="Items[index]" rows="1" cols="60" placeholder="Enter text..."></InputTextArea>
                <button type="button" @onclick="() => RemoveItem(index)">Remove</button>
            </li>
        }
    </ul>
    <button type="button" @onclick="AddItem">+ Add</button>
    <ValidationMessage For="For" />
</div>

@code {
    [Parameter, EditorRequired] public string Label { get; set; } = default!;
    [Parameter, EditorRequired] public List<string> Items { get; set; } = new();

    // enables mapping the validation message to the correct form attribute
    [Parameter, EditorRequired] public Expression<Func<object>> For { get; set; } = default!;

    private void AddItem() => Items.Add(string.Empty);

    private void RemoveItem(int index)
    {
        if (index >= 0 && index < Items.Count)
            Items.RemoveAt(index);
    }
}
