// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobDescriptionGenerator.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("JobFamily", b =>
                {
                    b.Property<int>("JobFamilyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("JobFamilyAlias")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("JobFamilyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("JobFamilyId");

                    b.ToTable("JobFamilies");

                    b.HasData(
                        new
                        {
                            JobFamilyId = 1,
                            JobFamilyAlias = "ENG",
                            JobFamilyName = "Engineering"
                        },
                        new
                        {
                            JobFamilyId = 2,
                            JobFamilyAlias = "OPS",
                            JobFamilyName = "Operations"
                        });
                });

            modelBuilder.Entity("JobLevel", b =>
                {
                    b.Property<int>("JobLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("JobLevelName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("JobLevelId");

                    b.ToTable("JobLevels");

                    b.HasData(
                        new
                        {
                            JobLevelId = 4,
                            JobLevelName = "Job Level - 4"
                        },
                        new
                        {
                            JobLevelId = 5,
                            JobLevelName = "Job Level - 5"
                        },
                        new
                        {
                            JobLevelId = 6,
                            JobLevelName = "Job Level - 6"
                        },
                        new
                        {
                            JobLevelId = 7,
                            JobLevelName = "Job Level - 7"
                        },
                        new
                        {
                            JobLevelId = 8,
                            JobLevelName = "Job Level - 8"
                        },
                        new
                        {
                            JobLevelId = 9,
                            JobLevelName = "Job Level - 9"
                        },
                        new
                        {
                            JobLevelId = 10,
                            JobLevelName = "Job Level - 10"
                        },
                        new
                        {
                            JobLevelId = 11,
                            JobLevelName = "Job Level - 11"
                        });
                });

            modelBuilder.Entity("JobTitle", b =>
                {
                    b.Property<int>("JobTitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("JobFamilyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("JobLevelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JobTitleCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("JobTitleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("JobTitleId");

                    b.HasIndex("JobFamilyId");

                    b.HasIndex("JobLevelId");

                    b.ToTable("JobTitles");

                    b.HasData(
                        new
                        {
                            JobTitleId = 1,
                            JobFamilyId = 1,
                            JobLevelId = 4,
                            JobTitleCode = "SE1",
                            JobTitleName = "Software Engineer"
                        },
                        new
                        {
                            JobTitleId = 2,
                            JobFamilyId = 1,
                            JobLevelId = 6,
                            JobTitleCode = "SE2",
                            JobTitleName = "Senior Software Engineer"
                        },
                        new
                        {
                            JobTitleId = 3,
                            JobFamilyId = 2,
                            JobLevelId = 5,
                            JobTitleCode = "OA1",
                            JobTitleName = "Operations Analyst"
                        },
                        new
                        {
                            JobTitleId = 4,
                            JobFamilyId = 2,
                            JobLevelId = 8,
                            JobTitleCode = "LM1",
                            JobTitleName = "Logistics Manager"
                        });
                });

            modelBuilder.Entity("JobTitle", b =>
                {
                    b.HasOne("JobFamily", "JobFamily")
                        .WithMany("JobTitles")
                        .HasForeignKey("JobFamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobLevel", "JobLevel")
                        .WithMany("JobTitles")
                        .HasForeignKey("JobLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobFamily");

                    b.Navigation("JobLevel");
                });

            modelBuilder.Entity("JobFamily", b =>
                {
                    b.Navigation("JobTitles");
                });

            modelBuilder.Entity("JobLevel", b =>
                {
                    b.Navigation("JobTitles");
                });
#pragma warning restore 612, 618
        }
    }
}
